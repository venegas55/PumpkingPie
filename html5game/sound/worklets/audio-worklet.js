AudioWorkletProcessor.prototype._13=function(){this._23=true;this.port.onmessage=(_33)=>{if(_33.data==="kill")this._23=false;};};class _43 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._13();}process(_53,_63,parameters){const input=_53[0];const bypass=parameters.bypass;for(let c=0;c<input.length;++c){const _73=input[c];for(let _83=0;_83<_73.length;++_83){const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];
_63[_93][c][_83]=_73[_83];}}return this._23;}}class _a3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"gain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(){super();this._13();}process(_53,_63,parameters){const _b3=_53[0];const _c3=_53[1];const output=_63[0];const gain=parameters.gain;for(let c=0;c<_c3.length;++c){const _73=_c3[c];const _d3=output[c];for(let _83=0;_83<_73.length;++_83)_d3[_83]=_73[_83];}for(let c=0;c<_b3.length;++c){const _73=_b3[c];const _d3=output[c];
for(let _83=0;_83<_73.length;++_83){const _e3=(gain[_83]!==undefined)?gain[_83]:gain[0];_d3[_83]+=_73[_83]*_e3;}}return this._23;}}registerProcessor("audio-bus-input",_43);registerProcessor("audio-bus-output",_a3);class _f3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:1.0,minValue:0.0},{name:"factor",automationRate:"a-rate",defaultValue:20,minValue:1,maxValue:100}
,{name:"resolution",automationRate:"a-rate",defaultValue:8,minValue:2,maxValue:16},{name:"mix",automationRate:"a-rate",defaultValue:0.8,minValue:0.0,maxValue:1.0}];}static _g3=[undefined,undefined,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768];constructor(_h3){super();this._13();const _i3=_h3.outputChannelCount[0];this._j3=new Float32Array(_i3);this._k3=new Uint32Array(_i3);}process(_53,_63,parameters){const input=_53[0];const output=_63[0];const bypass=parameters.bypass;const gain=parameters.gain;
const factor=parameters.factor;const resolution=parameters.resolution;const mix=parameters.mix;for(let c=0;c<input.length;++c){const _73=input[c];const _d3=output[c];for(let _83=0;_83<_73.length;++_83){_d3[_83]=_73[_83];if(this._k3[c]===0)this._j3[c]=_73[_83];const _l3=(factor[_83]!==undefined)?factor[_83]:factor[0];++this._k3[c];this._k3[c]%=_l3;const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];if(_93>0.0){continue;}let _m3=this._j3[c];const _e3=(gain[_83]!==undefined)?gain[_83]:gain[0];_m3*=_e3;_m3=Math.max(Math.min(_m3,
1.0),-1.0);const _n3=(resolution[_83]!==undefined)?resolution[_83]:resolution[0];const max=(_m3>0.0)?_f3._g3[_n3]-1:_f3._g3[_n3];_m3=Math.round(_m3*max)/max;const _o3=(mix[_83]!==undefined)?mix[_83]:mix[0];_d3[_83]*=(1.0-_o3);_d3[_83]+=(_m3*_o3);}}return this._23;}}registerProcessor("bitcrusher-processor",_f3);class _p3{constructor(_q3=1e-3){this.setTime(_q3);}setTime(_q3){this._r3=Math.exp(-1/(_q3*sampleRate));}process(_s3,_t3){return _s3+this._r3*(_t3-_s3);}}class _u3{constructor(_v3,_w3){this._x3=new _p3(_v3);
this._y3=new _p3(_w3);this._z3=_v3;this._A3=_w3;}_B3(_q3){if(_q3===this._z3)return;this._x3.setTime(_q3);this._z3=_q3;}_C3(_q3){if(_q3===this._A3)return;this._y3.setTime(_q3);this._A3=_q3;}process(_s3,_t3){if(_s3>_t3)return this._x3.process(_s3,_t3);else return this._y3.process(_s3,_t3);}}class _D3 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"ingain",automationRate:"a-rate",defaultValue:1,minValue:0}
,{name:"threshold",automationRate:"a-rate",defaultValue:0.125,minValue:1e-3,maxValue:1},{name:"ratio",automationRate:"a-rate",defaultValue:4,minValue:1},{name:"attack",automationRate:"a-rate",defaultValue:0.05,minValue:1e-3,maxValue:1e-1},{name:"release",automationRate:"a-rate",defaultValue:0.25,minValue:1e-2,maxValue:1},{name:"outgain",automationRate:"a-rate",defaultValue:1,minValue:0}];}constructor(_E3){super();this._13();const _x3=_D3.parameterDescriptors.find(_F3=>_F3.name==="attack");const _y3=_D3.parameterDescriptors.find(_F3=>_F3.name==="release");
this._G3=new _u3(_x3.defaultValue,_y3.defaultValue);this._H3=0;}process(_I3,_J3,_K3){const input=_I3[0];const output=_J3[0];const bypass=_K3.bypass;const ingain=_K3.ingain;const outgain=_K3.outgain;const threshold=_K3.threshold;const ratio=_K3.ratio;const attack=_K3.attack;const release=_K3.release;if(input.length===0)return this._23;for(let _83=0;_83<input[0].length;++_83){let frame=input.map(_L3=>_L3[_83]);output.forEach((_L3,_M3)=>{_L3[_83]=frame[_M3];});const _N3=(ingain[_83]!==undefined)?ingain[_83]:ingain[0];
frame=frame.map(_O3=>_O3*=_N3);const rect=frame.map(_O3=>Math.abs(_O3));const max=Math.max(...rect);const _P3=_Q3(max);const _R3=(threshold[_83]!==undefined)?threshold[_83]:threshold[0];const _S3=_Q3(_R3);const _T3=Math.max(0,_P3-_S3);const _x3=(attack[_83]!==undefined)?attack[_83]:attack[0];const _y3=(release[_83]!==undefined)?release[_83]:release[0];this._G3._B3(_x3);this._G3._C3(_y3);this._H3=this._G3.process(_T3,this._H3);const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];if(_93>0)continue;const _n3=(ratio[_83]!==undefined)?ratio[_83]:ratio[0];
const _U3=(this._H3/_n3)-this._H3;const _e3=_V3(_U3);frame=frame.map(_O3=>_O3*=_e3);const _W3=(outgain[_83]!==undefined)?outgain[_83]:outgain[0];frame=frame.map(_O3=>_O3*=_W3);output.forEach((_L3,_M3)=>{_L3[_83]=frame[_M3];});}return this._23;}}function _Q3(_X3){return 20*Math.log10(_X3);}function _V3(_X3){return Math.pow(10,_X3/20);}registerProcessor("compressor-processor",_D3);class _Y3 extends AudioWorkletProcessor{static _Z3=5.0;static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",
defaultValue:0,minValue:0,maxValue:1},{name:"time",automationRate:"a-rate",defaultValue:0.2,minValue:0.0,maxValue:_Y3._Z3},{name:"feedback",automationRate:"a-rate",defaultValue:0.5,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_h3){super();this._13();const _i3=_h3.outputChannelCount[0];const __3=(_Y3._Z3*sampleRate)+1;this.buffer=new Array(_i3);this._04=new Uint32Array(_i3);for(let c=0;c<_i3;++c)this.buffer[c]=new Float32Array(__3);
}process(_53,_63,parameters){const input=_53[0];const output=_63[0];const bypass=parameters.bypass;const time=parameters.time;const feedback=parameters.feedback;const mix=parameters.mix;for(let c=0;c<input.length;++c){const _73=input[c];const _d3=output[c];for(let _83=0;_83<_73.length;++_83){_d3[_83]=_73[_83];const _R3=(time[_83]!==undefined)?time[_83]:time[0];const _14=this._24(c,_R3);const _l3=(feedback[_83]!==undefined)?feedback[_83]:feedback[0];const _34=_73[_83]+(_14*_l3);this.write(c,_34);const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];
if(_93>0.0){continue;}const _o3=(mix[_83]!==undefined)?mix[_83]:mix[0];_d3[_83]*=(1-_o3);_d3[_83]+=(_14*_o3);}}return this._23;}_24(_44,_q3){const _54=_q3*sampleRate;let _64=(this._04[_44]-~~_54);let _74=(_64-1);while(_64<0)_64+=this.buffer[_44].length;while(_74<0)_74+=this.buffer[_44].length;const frac=_54-~~_54;const _84=this.buffer[_44][_64];const _94=this.buffer[_44][_74];return _84+(_94-_84)*frac;}write(_44,_a4){++this._04[_44];this._04[_44]%=this.buffer[_44].length;this.buffer[_44][this._04[_44]]=_a4;
}}registerProcessor("delay-processor",_Y3);class _b4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [];}constructor(){super();this._13();}process(_c4,_d4,_e4){const input=_c4[0];const _f4=_d4[0];const _g4=_d4[1];for(let c=0;c<input.length;++c){const _73=input[c];const _h4=_f4[c];const _i4=_g4[c];for(let _83=0;_83<_73.length;++_83){_h4[_83]=_73[_83];_i4[_83]=_73[_83];}}return this._23;}}class _j4 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",
defaultValue:0,minValue:0,maxValue:1}];}constructor(){super();this._13();}process(_c4,_d4,_e4){const _b3=_c4[0];const _c3=_c4[1];const output=_d4[0];const bypass=_e4.bypass;for(let c=0;c<_c3.length;++c){const _k4=_b3[c];const _l4=_c3[c];const _d3=output[c];for(let _83=0;_83<_k4.length;++_83){const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];if(_93>0){_d3[_83]=_l4[_83];}else {_d3[_83]=_k4[_83];}}}return this._23;}}registerProcessor("eq-input",_b4);registerProcessor("eq-output",_j4);class _m4 extends AudioWorkletProcessor{
static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"gain",automationRate:"a-rate",defaultValue:0.5,minValue:0.0}];}constructor(){super();this._13();}process(_53,_63,parameters){const input=_53[0];const output=_63[0];const bypass=parameters.bypass;const gain=parameters.gain;for(let c=0;c<input.length;++c){const _73=input[c];const _d3=output[c];for(let _83=0;_83<_73.length;++_83){_d3[_83]=_73[_83];const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];
if(_93>0.0){continue;}const _e3=(gain[_83]!==undefined)?gain[_83]:gain[0];_d3[_83]*=_e3;}}return this._23;}}registerProcessor("gain-processor",_m4);class _n4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _o4=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(5000.0,_o4),minValue:10.0,maxValue:_o4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0}
,{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_h3){super();this._13();const _i3=_h3.outputChannelCount[0];this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=0;this._u4=new Float32Array(_i3);this._v4=new Float32Array(_i3);this._w4=new Float32Array(_i3);this._x4=new Float32Array(_i3);this._y4=-1;this._z4=-1;this._A4=-1;}process(_53,_63,parameters){const input=_53[0];const output=_63[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;
const _B4=(freq.length===1&&q.length===1&&gain.length===1);if(_B4)this._C4(freq[0],q[0],gain[0]);for(let c=0;c<input.length;++c){const _73=input[c];const _d3=output[c];for(let _83=0;_83<_73.length;++_83){if(_B4===false){const _l3=(freq[_83]!==undefined)?freq[_83]:freq[0];const _D4=(q[_83]!==undefined)?q[_83]:q[0];const _e3=(gain[_83]!==undefined)?gain[_83]:gain[0];this._C4(_l3,_D4,_e3);}const _E4=this._r4*_73[_83]+this._s4*this._u4[c]+this._t4*this._v4[c]-this._p4*this._w4[c]-this._q4*this._x4[c];this._v4[c]=this._u4[c];
this._u4[c]=_73[_83];this._x4[c]=this._w4[c];this._w4[c]=_E4;const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];_d3[_83]=(_93>0)?_73[_83]:_E4;}}return this._23;}_C4(_F4,_G4,_H4){if(_F4===this._y4&&_G4===this._z4&&_H4===this._A4)return;const _I4=2*Math.PI*_F4/sampleRate;const _J4=Math.cos(_I4);const _K4=Math.sqrt(_H4);const _L4=_K4+1;const _M4=_K4-1;const _N4=_L4*_J4;const _O4=_M4*_J4;const _P4=_L4-_O4;const _Q4=_L4+_O4;const alpha=Math.sin(_I4)/(2*_G4);const _R4=(2*Math.sqrt(_K4)*alpha);const _S4=_P4+_R4;
const _p4=2*(_M4-_N4);const _q4=_P4-_R4;const _r4=_K4*(_Q4+_R4);const _s4=-2*_K4*(_M4+_N4);const _t4=_K4*(_Q4-_R4);this._p4=_p4/_S4;this._q4=_q4/_S4;this._r4=_r4/_S4;this._s4=_s4/_S4;this._t4=_t4/_S4;this._y4=_F4;this._z4=_G4;this._A4=_H4;}}registerProcessor("hi-shelf-processor",_n4);class _T4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _U4=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(1500.0,
_U4),minValue:10.0,maxValue:_U4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}];}constructor(_h3){super();this._13();const _i3=_h3.outputChannelCount[0];this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=0;this._u4=new Float32Array(_i3);this._v4=new Float32Array(_i3);this._w4=new Float32Array(_i3);this._x4=new Float32Array(_i3);this._V4=-1;this._z4=-1;}process(_53,_63,parameters){const input=_53[0];const output=_63[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;
const q=parameters.q;const _B4=(cutoff.length===1&&q.length===1);if(_B4)this._C4(cutoff[0],q[0]);for(let c=0;c<input.length;++c){const _73=input[c];const _d3=output[c];for(let _83=0;_83<_73.length;++_83){if(_B4===false){const c=(cutoff[_83]!==undefined)?cutoff[_83]:cutoff[0];const _D4=(q[_83]!==undefined)?q[_83]:q[0];this._C4(c,_D4);}const _E4=this._r4*_73[_83]+this._s4*this._u4[c]+this._t4*this._v4[c]-this._p4*this._w4[c]-this._q4*this._x4[c];this._v4[c]=this._u4[c];this._u4[c]=_73[_83];this._x4[c]=this._w4[c];
this._w4[c]=_E4;const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];_d3[_83]=(_93>0)?_73[_83]:_E4;}}return this._23;}_C4(_W4,_G4){if(_W4===this._V4&&_G4===this._z4)return;const _I4=2*Math.PI*_W4/sampleRate;const alpha=Math.sin(_I4)/(2*_G4);const _J4=Math.cos(_I4);const _S4=1+alpha;const _p4=-2*_J4;const _q4=1-alpha;const _r4=(1+_J4)/2;const _s4=-1-_J4;const _t4=(1+_J4)/2;this._p4=_p4/_S4;this._q4=_q4/_S4;this._r4=_r4/_S4;this._s4=_s4/_S4;this._t4=_t4/_S4;this._V4=_W4;this._z4=_G4;}}registerProcessor("hpf2-processor",
_T4);class _X4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _o4=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(500.0,_o4),minValue:10.0,maxValue:_o4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_h3){super();this._13();const _i3=_h3.outputChannelCount[0];
this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=0;this._u4=new Float32Array(_i3);this._v4=new Float32Array(_i3);this._w4=new Float32Array(_i3);this._x4=new Float32Array(_i3);this._y4=-1;this._z4=-1;this._A4=-1;}process(_53,_63,parameters){const input=_53[0];const output=_63[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _B4=(freq.length===1&&q.length===1&&gain.length===1);if(_B4)this._C4(freq[0],q[0],gain[0]);for(let c=0;c<input.length;
++c){const _73=input[c];const _d3=output[c];for(let _83=0;_83<_73.length;++_83){if(_B4===false){const _l3=(freq[_83]!==undefined)?freq[_83]:freq[0];const _D4=(q[_83]!==undefined)?q[_83]:q[0];const _e3=(gain[_83]!==undefined)?gain[_83]:gain[0];this._C4(_l3,_D4,_e3);}const _E4=this._r4*_73[_83]+this._s4*this._u4[c]+this._t4*this._v4[c]-this._p4*this._w4[c]-this._q4*this._x4[c];this._v4[c]=this._u4[c];this._u4[c]=_73[_83];this._x4[c]=this._w4[c];this._w4[c]=_E4;const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];
_d3[_83]=(_93>0)?_73[_83]:_E4;}}return this._23;}_C4(_F4,_G4,_H4){if(_F4===this._y4&&_G4===this._z4&&_H4===this._A4)return;const _I4=2*Math.PI*_F4/sampleRate;const _J4=Math.cos(_I4);const _K4=Math.sqrt(_H4);const _L4=_K4+1;const _M4=_K4-1;const _N4=_L4*_J4;const _O4=_M4*_J4;const _P4=_L4-_O4;const _Q4=_L4+_O4;const alpha=Math.sin(_I4)/(2*_G4);const _R4=(2*Math.sqrt(_K4)*alpha);const _S4=_Q4+_R4;const _p4=-2*(_M4+_N4);const _q4=_Q4-_R4;const _r4=_K4*(_P4+_R4);const _s4=2*_K4*(_M4-_N4);const _t4=_K4*(_P4-_R4);this._p4=_p4/_S4;
this._q4=_q4/_S4;this._r4=_r4/_S4;this._s4=_s4/_S4;this._t4=_t4/_S4;this._y4=_F4;this._z4=_G4;this._A4=_H4;}}registerProcessor("lo-shelf-processor",_X4);class _Y4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _U4=sampleRate*0.45;return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"cutoff",automationRate:"a-rate",defaultValue:Math.min(500.0,_U4),minValue:10.0,maxValue:_U4},{name:"q",automationRate:"a-rate",defaultValue:1.5,minValue:1.0,maxValue:100.0}
];}constructor(_h3){super();this._13();const _i3=_h3.outputChannelCount[0];this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=0;this._u4=new Float32Array(_i3);this._v4=new Float32Array(_i3);this._w4=new Float32Array(_i3);this._x4=new Float32Array(_i3);this._V4=-1;this._z4=-1;}process(_53,_63,parameters){const input=_53[0];const output=_63[0];const bypass=parameters.bypass;const cutoff=parameters.cutoff;const q=parameters.q;const _B4=(cutoff.length===1&&q.length===1);if(_B4)this._C4(cutoff[0],q[0]);for(let c=0;
c<input.length;++c){const _73=input[c];const _d3=output[c];for(let _83=0;_83<_73.length;++_83){if(_B4===false){const c=(cutoff[_83]!==undefined)?cutoff[_83]:cutoff[0];const _D4=(q[_83]!==undefined)?q[_83]:q[0];this._C4(c,_D4);}const _E4=this._r4*_73[_83]+this._s4*this._u4[c]+this._t4*this._v4[c]-this._p4*this._w4[c]-this._q4*this._x4[c];this._v4[c]=this._u4[c];this._u4[c]=_73[_83];this._x4[c]=this._w4[c];this._w4[c]=_E4;const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];_d3[_83]=(_93>0)?_73[_83]:_E4;
}}return this._23;}_C4(_W4,_G4){if(_W4===this._V4&&_G4===this._z4)return;const _I4=2*Math.PI*_W4/sampleRate;const alpha=Math.sin(_I4)/(2*_G4);const _J4=Math.cos(_I4);const _S4=1+alpha;const _p4=-2*_J4;const _q4=1-alpha;const _r4=(1-_J4)/2;const _s4=1-_J4;const _t4=(1-_J4)/2;this._p4=_p4/_S4;this._q4=_q4/_S4;this._r4=_r4/_S4;this._s4=_s4/_S4;this._t4=_t4/_S4;this._V4=_W4;this._z4=_G4;}}registerProcessor("lpf2-processor",_Y4);class _Z4 extends AudioWorkletProcessor{static get parameterDescriptors(){const _o4=sampleRate*0.45;
return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"freq",automationRate:"a-rate",defaultValue:Math.min(1500.0,_o4),minValue:10.0,maxValue:_o4},{name:"q",automationRate:"a-rate",defaultValue:1.0,minValue:1.0,maxValue:100.0},{name:"gain",automationRate:"a-rate",defaultValue:1e-2,minValue:1e-6}];}constructor(_h3){super();this._13();const _i3=_h3.outputChannelCount[0];this._p4=0;this._q4=0;this._r4=0;this._s4=0;this._t4=0;this._u4=new Float32Array(_i3);this._v4=new Float32Array(_i3);
this._w4=new Float32Array(_i3);this._x4=new Float32Array(_i3);this._y4=-1;this._z4=-1;this._A4=-1;}process(_53,_63,parameters){const input=_53[0];const output=_63[0];const bypass=parameters.bypass;const freq=parameters.freq;const q=parameters.q;const gain=parameters.gain;const _B4=(freq.length===1&&q.length===1&&gain.length===1);if(_B4)this._C4(freq[0],q[0],gain[0]);for(let c=0;c<input.length;++c){const _73=input[c];const _d3=output[c];for(let _83=0;_83<_73.length;++_83){if(_B4===false){const _l3=(freq[_83]!==undefined)?freq[_83]:freq[0];
const _D4=(q[_83]!==undefined)?q[_83]:q[0];const _e3=(gain[_83]!==undefined)?gain[_83]:gain[0];this._C4(_l3,_D4,_e3);}const _E4=this._r4*_73[_83]+this._s4*this._u4[c]+this._t4*this._v4[c]-this._p4*this._w4[c]-this._q4*this._x4[c];this._v4[c]=this._u4[c];this._u4[c]=_73[_83];this._x4[c]=this._w4[c];this._w4[c]=_E4;const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];_d3[_83]=(_93>0)?_73[_83]:_E4;}}return this._23;}_C4(_F4,_G4,_H4){if(_F4===this._y4&&_G4===this._z4&&_H4===this._A4)return;const _I4=2*Math.PI*_F4/sampleRate;
const _J4=Math.cos(_I4);const _K4=Math.sqrt(_H4);const alpha=Math.sin(_I4)/(2*_G4);const __4=alpha/_K4;const _05=alpha*_K4;const _S4=1+__4;const _p4=-2*_J4;const _q4=1-__4;const _r4=1+_05;const _s4=_p4;const _t4=1-_05;this._p4=_p4/_S4;this._q4=_q4/_S4;this._r4=_r4/_S4;this._s4=_s4/_S4;this._t4=_t4/_S4;this._y4=_F4;this._z4=_G4;this._A4=_H4;}}registerProcessor("peak-eq-processor",_Z4);class _15{constructor(_25){this._35=0;this._45=0;this.feedback=0;this._55=0;this.buffer=new Float32Array(_25);this._65=0;}process(_a4){
const out=this.buffer[this._65];this._55=(this._55*this._35)+(out*this._45);this.buffer[this._65]=_a4+(this._55*this.feedback);++this._65;this._65%=this.buffer.length;return out;}_75(_85){this.feedback=Math.min(Math.max(0,_85),1);}_95(_a5){this._35=Math.min(Math.max(0,_a5),1);this._45=1-this._35;}}class _b5{constructor(_25){this.feedback=0;this.buffer=new Float32Array(_25);this._65=0;}process(_a4){const out=this.buffer[this._65];this.buffer[this._65]=_a4+(out*this.feedback);++this._65;this._65%=this.buffer.length;
return(out-_a4);}_75(_85){this.feedback=Math.min(Math.max(0,_85),1);}}class _c5 extends AudioWorkletProcessor{static _d5=8;static _e5=4;static _f5=0.015;static _g5=0.4;static _h5=0.28;static _i5=0.7;static _j5=[1116,1188,1277,1356,1422,1491,1557,1617];static _k5=[1139,1211,1300,1379,1445,1514,1580,1640];static _l5=[556,441,341,225];static _m5=[579,464,364,248];static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"size",automationRate:"a-rate",
defaultValue:0.7,minValue:0.0,maxValue:1.0},{name:"damp",automationRate:"a-rate",defaultValue:0.1,minValue:0.0,maxValue:1.0},{name:"mix",automationRate:"a-rate",defaultValue:0.35,minValue:0.0,maxValue:1.0}];}constructor(_h3){super();this._13();const _i3=_h3.outputChannelCount[0];this._n5=-1;this._o5=-1;this._p5=new Array(_i3);this._q5=new Array(_i3);const _r5=[_c5._j5,_c5._k5];const _s5=[_c5._l5,_c5._m5];for(let c=0;c<_i3;++c){this._p5[c]=new Array(_c5._d5);this._q5[c]=new Array(_c5._e5);for(let i=0;i<_c5._d5;
++i)this._p5[c][i]=new _15(_r5[c%_r5.length][i]);for(let i=0;i<_c5._e5;++i)this._q5[c][i]=new _b5(_s5[c%_s5.length][i]);}this._t5(0.5);this._95(0.5);for(let c=0;c<_i3;++c)for(let i=0;i<_c5._e5;++i)this._q5[c][i]._75(0.5);}process(_53,_63,parameters){const input=_53[0];const output=_63[0];const bypass=parameters.bypass;const size=parameters.size;const damp=parameters.damp;const mix=parameters.mix;for(let c=0;c<input.length;++c){const _73=input[c];const _d3=output[c];for(let _u5=0;_u5<_73.length;++_u5){const _83=(size[_u5]!==undefined)?size[_u5]:size[0];
const _v5=(damp[_u5]!==undefined)?damp[_u5]:damp[0];this._t5(_83);this._95(_v5);_d3[_u5]=_73[_u5];let out=0;const _m3=_73[_u5]*_c5._f5;for(let i=0;i<_c5._d5;++i)out+=this._p5[c][i].process(_m3);for(let i=0;i<_c5._e5;++i)out=this._q5[c][i].process(out);const _93=(bypass[_u5]!==undefined)?bypass[_u5]:bypass[0];if(_93>0.0){continue;}const _o3=(mix[_u5]!==undefined)?mix[_u5]:mix[0];_d3[_u5]*=(1-_o3);_d3[_u5]+=(out*_o3);}}return this._23;}_t5(_25){if(_25===this._n5)return;const size=(_25*_c5._h5)+_c5._i5;for(let c=0;
c<this._p5.length;++c)for(let i=0;i<_c5._d5;++i)this._p5[c][i]._75(size);this._n5=_25;}_95(_a5){if(_a5===this._o5)return;const damp=_a5*_c5._g5;for(let c=0;c<this._p5.length;++c)for(let i=0;i<_c5._d5;++i)this._p5[c][i]._95(damp);this._o5=_a5;}}registerProcessor("reverb1-processor",_c5);class _w5 extends AudioWorkletProcessor{static get parameterDescriptors(){return [{name:"bypass",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:1},{name:"rate",automationRate:"a-rate",defaultValue:5.0,minValue:0.0,
maxValue:20.0},{name:"intensity",automationRate:"a-rate",defaultValue:1.0,minValue:0.0,maxValue:1.0},{name:"offset",automationRate:"a-rate",defaultValue:0.0,minValue:0.0,maxValue:1.0},{name:"shape",automationRate:"a-rate",defaultValue:0,minValue:0,maxValue:4}];}constructor(_h3){super();this._13();const _i3=_h3.outputChannelCount[0];this._x5=new Array(_i3).fill(1.0);this._y5=new Array(_i3).fill(0.0);this._z5=new Array(_i3).fill(_A5._B5._C5);this._D5=new Array(_i3);for(let c=0;c<_i3;++c){this._D5[c]=new _E5();
this._D5[c]._F5(sampleRate);this._D5[c]._G5(this._x5[c]);this._D5[c]._H5(this._z5[c]);if(c%2===1){this._D5[c]._I5(this._y5[c]);}}}process(_53,_63,parameters){const input=_53[0];const output=_63[0];const bypass=parameters.bypass;const rate=parameters.rate;const intensity=parameters.intensity;const offset=parameters.offset;const shape=parameters.shape;for(let c=0;c<input.length;++c){const _73=input[c];const _d3=output[c];for(let _83=0;_83<_73.length;++_83){_d3[_83]=_73[_83];const _n3=(rate[_83]!==undefined)?rate[_83]:rate[0];
const _J5=(offset[_83]!==undefined)?offset[_83]:offset[0];const _K5=(shape[_83]!==undefined)?shape[_83]:shape[0];this._L5(c,_n3,_J5,_K5);const _M5=this._D5[c]._24();const _93=(bypass[_83]!==undefined)?bypass[_83]:bypass[0];if(_93>0.0){continue;}const i=(intensity[_83]!==undefined)?intensity[_83]:intensity[0];const out=_73[_83]*_M5*i;_d3[_83]*=(1.0-i);_d3[_83]+=out;}}return this._23;}_L5(_44,_N5,_O5,_P5){if(_N5!==this._x5[_44]){this._D5[_44]._G5(_N5);this._x5[_44]=_N5;}if(_O5!==this._y5[_44]){if(_44%2===1){
this._D5[_44]._I5(_O5);}this._y5[_44]=_O5;}if(_P5!==this._z5[_44]){this._D5[_44]._H5(_P5);this._z5[_44]=_P5;}}}registerProcessor("tremolo-processor",_w5);function _A5(){}_A5._B5={_C5:0,_Q5:1,_R5:2,_S5:3,_T5:4,_U5:5};_A5._V5=function(_W5){return 1.0-_W5;};_A5._X5=function(_W5){return _W5;};_A5._Y5=function(_W5){return 0.5*(Math.sin((_W5*2.0*Math.PI)-(Math.PI/2.0))+1.0);};_A5._Z5=function(_W5){if(_W5<0.5){return 0.0;}return 1.0;};_A5.__5=function(_W5){if(_W5<0.5){return 2.0*_W5;}return 2.0-(2.0*_W5);};_A5._06=[_A5._V5,
_A5._X5,_A5._Y5,_A5._Z5,_A5.__5];_16._26=512;_16._36=1.0/_16._26;function _16(_46){this.data=new Float32Array(_16._26);for(let i=0;i<_16._26;++i){this.data[i]=_46(i*_16._36);}}_16.prototype._24=function(_W5){_W5=Math.max(0.0,_W5);_W5=Math.min(_W5,1.0);const _56=_W5*_16._26;const _66=~~_56;const _76=_56-_66;let _64=_66;let _74=_64+1;if(_64>=_16._26){_64-=_16._26;}if(_74>=_16._26){_74-=_16._26;}const _84=this.data[_64];const _94=this.data[_74];return _84+(_94-_84)*_76;};_E5._86=[];_E5._96=false;_E5._a6=0.0;_E5._o4=20.0;
function _E5(){this._b6=48000;this.shape=_A5._B5._R5;this.freq=1.0;this._c6=0.0;this._36=0.0;this._d6=0.0;if(_E5._96==true){return;}for(let i=0;i<_A5._B5._U5;++i){_E5._86[i]=new _16(_A5._06[i]);}_E5._96=true;}_E5._e6=function(){return(_E5._96==true);};_E5.prototype._F5=function(_f6){this._b6=_f6;this._g6();};_E5.prototype._G5=function(_F4){_F4=Math.max(_E5._a6,_F4);_F4=Math.min(_F4,_E5._o4);this.freq=_F4;this._g6();};_E5.prototype._I5=function(_O5){_O5=Math.max(0.0,_O5);_O5=Math.min(_O5,1.0);const _h6=_O5-this._d6;
this._d6=_O5;this._c6+=_h6;while(this._c6>=1.0){this._c6-=1.0;}while(this._c6<0.0){this._c6+=1.0;}};_E5.prototype._H5=function(_P5){_P5=Math.max(0,_P5);_P5=Math.min(_P5,_A5._B5._U5-1);this.shape=_P5;};_E5.prototype._24=function(){const result=_E5._86[this.shape]._24(this._c6);this._c6+=this._36;while(this._c6>=1.0){this._c6-=1.0;}return result;};_E5.prototype._g6=function(){this._36=this.freq/this._b6;};